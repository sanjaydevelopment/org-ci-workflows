name: Python Checks

on:
  workflow_call:
    secrets: inherit

permissions:
  contents: read
  issues: write

jobs:
  run-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Initialize results
        run: |
          echo "REQ_RESULT=success" >> $GITHUB_ENV
          echo "STRUCT_RESULT=success" >> $GITHUB_ENV
          echo "SECRET_RESULT=success" >> $GITHUB_ENV
          echo "LINT_RESULT=success" >> $GITHUB_ENV
          echo "SECURITY_RESULT=success" >> $GITHUB_ENV

      # ---------------- Mandatory Checks ----------------
      - name: Check for requirements.txt
        run: |
          if [ ! -f "requirements.txt" ]; then
            echo "REQ_RESULT=fail" >> $GITHUB_ENV
            exit 1
          fi

      - name: Check project structure
        run: |
          if [ ! -d "src" ]; then
            echo "STRUCT_RESULT=fail" >> $GITHUB_ENV
            exit 1
          fi

      # ---------------- Optional Checks ----------------
      - name: Check for hardcoded sensitive values
        continue-on-error: true
        run: |
          if grep -r "password" .; then
            echo "SECRET_RESULT=fail" >> $GITHUB_ENV
          fi

      - name: Run lint (flake8)
        continue-on-error: true
        run: |
          pip install flake8
          if ! flake8 .; then
            echo "LINT_RESULT=fail" >> $GITHUB_ENV
          fi

      - name: Run security check (bandit)
        continue-on-error: true
        run: |
          pip install bandit
          if ! bandit -r .; then
            echo "SECURITY_RESULT=fail" >> $GITHUB_ENV
          fi

      # ---------------- Publish Summary ----------------
      - name: Publish summary
        if: always()
        run: |
          echo "## üö¶ Python Checks Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Result |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY

          if [ "$REQ_RESULT" = "success" ]; then echo "| requirements.txt | ‚úÖ PASS |" >> $GITHUB_STEP_SUMMARY; else echo "| requirements.txt | ‚ùå FAIL |" >> $GITHUB_STEP_SUMMARY; fi
          if [ "$STRUCT_RESULT" = "success" ]; then echo "| Project structure | ‚úÖ PASS |" >> $GITHUB_STEP_SUMMARY; else echo "| Project structure | ‚ùå FAIL |" >> $GITHUB_STEP_SUMMARY; fi
          if [ "$SECRET_RESULT" = "success" ]; then echo "| Sensitive values | ‚úÖ PASS |" >> $GITHUB_STEP_SUMMARY; else echo "| Sensitive values | ‚ö†Ô∏è WARNING |" >> $GITHUB_STEP_SUMMARY; fi
          if [ "$LINT_RESULT" = "success" ]; then echo "| Lint | ‚úÖ PASS |" >> $GITHUB_STEP_SUMMARY; else echo "| Lint | ‚ö†Ô∏è WARNING |" >> $GITHUB_STEP_SUMMARY; fi
          if [ "$SECURITY_RESULT" = "success" ]; then echo "| Security check | ‚úÖ PASS |" >> $GITHUB_STEP_SUMMARY; else echo "| Security check | ‚ö†Ô∏è WARNING |" >> $GITHUB_STEP_SUMMARY; fi

      # ---------------- Fail Job if Mandatory Checks Fail ----------------
      - name: Fail job if checks failed
        if: always()
        run: |
          if [ "$REQ_RESULT" = "fail" ] || [ "$STRUCT_RESULT" = "fail" ]; then
            echo "‚ùå Mandatory checks failed"
            exit 1
          fi

      # ---------------- Create/Update Issue ----------------
      - name: Create/Update Issue
        if: failure()
        uses: dacbd/create-issue-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Python Checks Failed"
          body: |
            Some checks have failed in the workflow run.
            Please review the **Actions summary** for details.
