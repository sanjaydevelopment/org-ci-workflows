name: Global Python Checks

on:
  workflow_call:

jobs:
  run-checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Initialize failure summary
        run: echo "" > failure-summary.txt

      # ✅ Check requirements.txt
      - name: Check for requirements.txt
        run: |
          if [ ! -f requirements.txt ]; then
            echo "❌ requirements.txt missing" >> failure-summary.txt
          fi

      # ✅ Check project structure
      - name: Check project structure
        run: |
          for dir in src tests; do
            if [ ! -d "$dir" ]; then
              echo "❌ Missing directory: $dir" >> failure-summary.txt
            fi
          done

      # ✅ Hardcoded values check
      - name: Check for hardcoded secrets
        run: |
          if grep -R "password=" . || grep -R "api_key=" .; then
            echo "❌ Hardcoded sensitive values found" >> failure-summary.txt
          fi

      # ✅ Lint (optional, continue but log failures)
      - name: Run lint
        run: |
          pip install flake8
          set +e
          flake8 . > lint-report.txt
          if [ $? -ne 0 ]; then
            echo "❌ Lint errors found (see lint-report.txt)" >> failure-summary.txt
          fi
          set -e

      # ✅ Security check (optional, continue but log failures)
      - name: Run security check
        run: |
          pip install bandit
          set +e
          bandit -r . -f txt -o security-report.txt
          if [ $? -ne 0 ]; then
            echo "❌ Security issues found (see security-report.txt)" >> failure-summary.txt
          fi
          set -e

      # ✅ Upload artifacts for debugging
      - name: Upload reports
        uses: actions/upload-artifact@v3
        with:
          name: reports
          path: |
            failure-summary.txt
            lint-report.txt
            security-report.txt

      # ✅ Fail if summary has issues
      - name: Check results
        id: results
        run: |
          if [ -s failure-summary.txt ]; then
            echo "status=fail" >> $GITHUB_OUTPUT
          else
            echo "status=pass" >> $GITHUB_OUTPUT
          fi

      # ✅ Manage Issue
      - name: Create/Update Issue
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require("fs");
            const summary = fs.readFileSync("failure-summary.txt", "utf8");
            const branch = process.env.GITHUB_REF_NAME;
            const issueTitle = `⚠️ CI Issues in branch: ${branch}`;
            const label = "ci-checks";

            const issues = await github.paginate(
              github.rest.issues.listForRepo,
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: "open",
                labels: label
              }
            );
            const existing = issues.find(i => i.title === issueTitle);

            if ("${{ steps.results.outputs.status }}" === "fail") {
              const body = `CI checks failed on branch \`${branch}\` in workflow run [${context.runId}](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})\n\n**Summary:**\n\`\`\`\n${summary}\n\`\`\``;

              if (existing) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: existing.number,
                  body
                });
              } else {
                await github.rest.issues.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: issueTitle,
                  body,
                  labels: [label]
                });
              }
            } else {
              if (existing) {
                await github.rest.issues.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: existing.number,
                  state: "closed",
                  body: "✅ All checks passing, closing issue."
                });
              }
            }

      # ✅ Final fail if needed
      - name: Fail job if checks failed
        if: steps.results.outputs.status == 'fail'
        run: exit 1
